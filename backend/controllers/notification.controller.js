const Notification = require("../models/notification.model");

// üü¢ L·∫•y t·∫•t c·∫£ th√¥ng b√°o
const getAllNotifications = async (req, res) => {
  try {
    const notifications = await Notification.find().sort({ created_at: -1 });
    res.status(200).json(notifications);
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch th√¥ng b√°o", error });
  }
};

// üü¢ L·∫•y th√¥ng b√°o theo user_id
const getNotificationsByUser = async (req, res) => {
  try {
    const { userId } = req.params;
    const notifications = await Notification.find({ user_id: userId }).sort({ created_at: -1 });
    res.status(200).json(notifications);
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi l·∫•y th√¥ng b√°o c·ªßa ng∆∞·ªùi d√πng", error });
  }
};

// üü¢ T·∫°o th√¥ng b√°o m·ªõi
const createNotification = async (req, res) => {
  try {
    const newNotification = new Notification(req.body);
    await newNotification.save();
    res.status(201).json({ message: "T·∫°o th√¥ng b√°o th√†nh c√¥ng", data: newNotification });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi t·∫°o th√¥ng b√°o", error });
  }
};

// üü¢ ƒê√°nh d·∫•u th√¥ng b√°o l√† ƒë√£ ƒë·ªçc
const markAsRead = async (req, res) => {
  try {
    const { id } = req.params;
    const updated = await Notification.findByIdAndUpdate(
      id,
      { status: "read" },
      { new: true }
    );
    if (!updated) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y th√¥ng b√°o" });
    }
    res.status(200).json({ message: "ƒê√£ ƒë√°nh d·∫•u l√† ƒë√£ ƒë·ªçc", data: updated });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t th√¥ng b√°o", error });
  }
};

// üü¢ X√≥a th√¥ng b√°o
const deleteNotification = async (req, res) => {
  try {
    const { id } = req.params;
    const deleted = await Notification.findByIdAndDelete(id);
    if (!deleted) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y th√¥ng b√°o" });
    }
    res.status(200).json({ message: "ƒê√£ x√≥a th√¥ng b√°o", data: deleted });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi x√≥a th√¥ng b√°o", error });
  }
};

// Xu·∫•t ra c√°c controller
module.exports = {
  getAllNotifications,
  getNotificationsByUser,
  createNotification,
  markAsRead,
  deleteNotification,
};
